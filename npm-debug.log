0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files (x86)\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.10.10
3 info using node@v6.9.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\Users\\BAO\\www\\Thousanday-React',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\BAO\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle thousanday-react@0.7.0~prepublish: thousanday-react@0.7.0
11 verbose lifecycle thousanday-react@0.7.0~prepublish: unsafe-perm in lifecycle true
12 verbose lifecycle thousanday-react@0.7.0~prepublish: PATH: C:\Program Files (x86)\nodejs\node_modules\npm\bin\node-gyp-bin;C:\Users\BAO\www\Thousanday-React\node_modules\.bin;C:\Program Files\Git\cmd;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\Adobe\AGL;C:\Program Files (x86)\Heroku\bin;C:\Bitnami\wampstack-5.6.24-0\php;C:\Program Files (x86)\git\cmd;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\nodejs\;C:\Users\BAO\AppData\Local\Programs\Python\Python35\Scripts\;C:\Users\BAO\AppData\Local\Programs\Python\Python35\;C:\Users\BAO\AppData\Local\Microsoft\WindowsApps;C:\Users\BAO\AppData\Local\atom\bin;;C:\Program Files (x86)\Microsoft VS Code\bin;C:\Users\BAO\AppData\Roaming\npm
13 verbose lifecycle thousanday-react@0.7.0~prepublish: CWD: C:\Users\BAO\www\Thousanday-React
14 silly lifecycle thousanday-react@0.7.0~prepublish: Args: [ '/d /s /c', 'npm run compile' ]
15 silly lifecycle thousanday-react@0.7.0~prepublish: Returned: code: 0  signal: null
16 verbose tar pack [ 'C:\\Users\\BAO\\AppData\\Roaming\\npm-cache\\thousanday-react\\0.7.0\\package.tgz',
16 verbose tar pack   'C:\\Users\\BAO\\www\\Thousanday-React' ]
17 verbose tarball C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package.tgz
18 verbose folder C:\Users\BAO\www\Thousanday-React
19 verbose addLocalTarball adding from inside cache C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package.tgz
20 verbose correctMkdir C:\Users\BAO\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
21 silly cache afterAdd thousanday-react@0.7.0
22 verbose afterAdd C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package\package.json not in flight; writing
23 verbose correctMkdir C:\Users\BAO\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
24 verbose afterAdd C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package\package.json written
25 silly publish { name: 'thousanday-react',
25 silly publish   version: '0.7.0',
25 silly publish   author: { name: 'Baozier' },
25 silly publish   email: 'byn9826@gmail.com',
25 silly publish   description: 'A list of React UI Components',
25 silly publish   url: 'https://github.com/byn9826/Thousanday-React',
25 silly publish   repository:
25 silly publish    { type: 'git',
25 silly publish      url: 'git+https://github.com/byn9826/Thousanday-React.git' },
25 silly publish   license: 'MIT',
25 silly publish   main: 'index.js',
25 silly publish   scripts: { compile: 'babel -d lib/ src/', prepublish: 'npm run compile' },
25 silly publish   dependencies: { react: '^15.3.2', 'react-dom': '^15.3.2' },
25 silly publish   devDependencies:
25 silly publish    { 'babel-cli': '^6.18.0',
25 silly publish      'babel-preset-es2015': '^6.16.0',
25 silly publish      'babel-preset-react': '^6.16.0' },
25 silly publish   bugs: { url: 'https://github.com/byn9826/Thousanday-React/issues' },
25 silly publish   homepage: 'https://github.com/byn9826/Thousanday-React#readme',
25 silly publish   readme: '# React-Thousanday\r\nA list of React UI components, will update step by step.\r\n\r\n##1. Install\r\n```\r\nnpm install thousanday-react --save\r\n```\r\n\r\n\r\n##2. Components List\r\n[Random](#random)<br />\r\n[Rate](#rate)<br />\r\n[Waterfall](#waterfall)<br/>\r\n[Inputbox](#inputbox)<br />\r\n[Inputarea](#inputarea)<br />\r\n[Vote](#vote)<br />\r\n[AddtoList](#addtolist)<br />\r\n[Like](#like)<br />\r\n[Progress](#progress)<br />\r\n\r\n\r\n##<a name="random">Random</a>\r\nOutput one random contents from a list of content you provided inside a designated html tag.<br/>\r\n![Random](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/random.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#random)<br/>\r\n```\r\nimport {Random} from \'thousanday-react\';\r\n```\r\n```\r\nlet randomContent = ["Slogan 1", "Slogan 2", "Slogan 3"];\r\n...\r\n<Random random={randomContent} font="h3" />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>content</td>\r\n\t\t<td>Mandatory. Provie list of content you want to show randomly.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>["123", "234", "345"]</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>font</td>\r\n\t\t<td>Mandatory. Provide a tag name to hold the output.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"h3"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>style</td>\r\n\t\t<td>Optional. Define a style name could be used to styling this component.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"randomStyle"</td>\r\n\t</tr>\r\n</table>\r\n\r\n\r\n##<a name="rate">Rate</a>\r\nDisplay or Receive rate from users<br/>\r\n![Rating](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/rate.PNG)<br/>\r\n[Example](http://www.thousanday.com/react#rate)<br/>\r\n```\r\nimport {Rate} from \'thousanday-react\';\r\n```\r\n```\r\n<Rate rate="3" max="5" interact="true" rateChange={this.rateChange.bind(this)} />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>rate</td>\r\n\t\t<td>Mandatory. Define the default rates. Define it as 0 for no initial rate.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"4"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>max</td>\r\n\t\t<td>Mandatory. Define the maximum number of stars</td>\r\n\t\t<td>"5"</td>\r\n\t\t<td>"6"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>interact</td>\r\n\t\t<td>Optinal. If current user are allowed to change the defaut rate</td>\r\n\t\t<td>false</td>\r\n\t\t<td>"true"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>font</td>\r\n\t\t<td>Optional. Adjust size of this component</td>\r\n\t\t<td>"18px"</td>\r\n\t\t<td>"14px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>color</td>\r\n\t\t<td>Optional. Define color of this component</td>\r\n\t\t<td>"orange"</td>\r\n\t\t<td>"black"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>rateChange</td>\r\n\t\t<td>Optinal. Bind with a function to receive new rate from users</td>\r\n\t\t<td></td>\r\n\t\t<td>{this.rateChange.bind(this)}</td>\r\n\t</tr>\r\n</table>\r\n###<b>Get new rate from user</b>\r\nYou should bind ratechange params with a function, and define interact params as "true" first:\r\n```\r\n<Rate rate={this.state.currentRate} max="5" interact="true" rateChange={this.rateChange.bind(this)}/>\r\n```\r\nThen you should create a rateChange function to deal with new rate:\r\n```\r\nrateChange(rateNum){\r\n    //rateNum is the new rate from current user\r\n    this.setState({currentRate:rateNum});\r\n}\r\n```\r\n\r\n##<a name="waterfall">Waterfall</a>\r\nResponsive and Interactive Pinterest Like Image Gallery by React.<br/>\r\n![Waterfall](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/waterfall.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#waterfall)<br/>\r\n```\r\nimport {Waterfall} from \'thousanday-react\';\r\n```\r\n```\r\nlet images = [\r\n    ["url/0.jpg", "message0"],\r\n    ["url/1.jpg", "message1"],\r\n    ["url/2.jpg", "message2"],\r\n    ["url/3.jpg", "message3"],\r\n    ["url/4.jpg", "message4"],\r\n    ["url/5.jpg", "message5"],\r\n    ...\r\n];\r\n...\r\nclickNumber(index) {\r\n    console.log(index);//index is the index number (in images array) of the image which has been clicked by user\r\n}\r\n...\r\n<Waterfall column="3" image={images} />// if you don\'t need a return when users click on images\r\n<Waterfall column="5" image={images} clickNumber={this.clickNumber.bind(this)} />\r\n```\r\n\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>image</td>\r\n\t\t<td>Mandatory. Provie an array contains url and message of all the images you want to show.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>[\r\n\t\t\t\t["url/0.jpg", "message0"],\r\n\t\t\t\t["url/1.jpg", "message1"],\r\n\t\t\t\t["url/2.jpg", "message2"],\r\n\t\t\t\t...\r\n\t\t\t]\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>column</td>\r\n\t\t<td>Mandatory. Decide how many columns you want to images to display.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"3"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>clickNumber</td>\r\n\t\t<td>Optional. Create a function to get the index of the image has been clicked by users.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>clickNumber={this.clickNumber.bind(this)}</td>\r\n\t</tr>\r\n</table>\r\n###<b>All the features of this component</b>\r\n1. Passing all the image urls and messages you want to show above the image by an array, will automatically layout all the images by the number of columns you defined.\r\n2. Show messages above images when mouse over.\r\n3. All the images is responsive according to screen width and the messages above images is responsive too.\r\n4. Automatically balance the height of each column. Make all the columns balanced.\r\n5. Return the index number of the image in the image array if users click on it.\r\n\r\n\r\n##<a name="inputbox">Inputbox</a>\r\nCreate text input with characters counter<br />\r\n![Inputbox](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/inputbox.JPG)<br />\r\n[Simple Example](http://www.thousanday.com/react#inputbox)<br />\r\n```\r\nimport {Inputbox} from \'thousanday-react\';\r\n```\r\n```\r\n<Inputbox content="Inital content here" max="30" />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>content</td>\r\n\t\t<td>Mandatory. Define the content show in the input. Inital Empty one by ""</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"Initial content"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>max</td>\r\n\t\t<td>Mandatory. Define the maximun number of characters users could input</td>\r\n\t\t<td>Must Define it</td>\r\n\t\t<td>"20"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>hint</td>\r\n\t\t<td>Optional. Define the placehold attribute for input tag</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"Your name here"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>font</td>\r\n\t\t<td>Optional. Define the font size of the input</td>\r\n\t\t<td>"13px"</td>\r\n\t\t<td>"15px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>width</td>\r\n\t\t<td>Optional. Define the width of this component</td>\r\n\t\t<td>"100%"</td>\r\n\t\t<td>"150px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>border</td>\r\n\t\t<td>Optional. Define the border style</td>\r\n\t\t<td>"1px solid #1d4077"</td>\r\n\t\t<td>"1px dashed black"</td>\r\n\t</tr>\r\n</table>\r\n###<b>Get new input from users</b>\r\nIf you want to get the new input from users, you show define the ref params for this component first:\r\n```\r\n<Inputbox ref="newInput" content="" max="150" />\r\n```\r\nThen you could get the new input by use this.refs.newInput.state.content inside functions:\r\n```\r\nsubmitInput(){\r\n    console.log(this.refs.newInput.state.content);//this is users new input\r\n}\r\n...\r\n<button onClick={this.submitInput.bind(this)} />\r\n```\r\n\r\n\r\n##<a name="inputarea">Inputarea</a>\r\nCreate textarea with characters counter<br />\r\n![Inputbox](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/inputarea.JPG)<br />\r\n[Simple Example](http://www.thousanday.com/react#inputarea)<br />\r\n```\r\nimport {Inputarea} from \'thousanday-react\';\r\n```\r\n```\r\n<Inputarea content="Inital content here" max="300" />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>content</td>\r\n\t\t<td>Mandatory. Define the content show in the input. Inital Empty one by ""</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"Initial content"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>max</td>\r\n\t\t<td>Mandatory. Define the maximun number of characters users could input</td>\r\n\t\t<td>Must Define it</td>\r\n\t\t<td>"50"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>font</td>\r\n\t\t<td>Optional. Define the font size of the input</td>\r\n\t\t<td>"13px"</td>\r\n\t\t<td>"15px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>width</td>\r\n\t\t<td>Optional. Define the width of this component</td>\r\n\t\t<td>"100%"</td>\r\n\t\t<td>"150px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>height</td>\r\n\t\t<td>Optional. Define the height of this component</td>\r\n\t\t<td>"50px"</td>\r\n\t\t<td>"30px"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>border</td>\r\n\t\t<td>Optional. Define the border style</td>\r\n\t\t<td>"1px solid #1d4077"</td>\r\n\t\t<td>"1px dashed black"</td>\r\n\t</tr>\r\n</table>\r\n###<b>Get new input from users</b>\r\nIf you want to get the new input from users, you show define the ref params for this component first:\r\n```\r\n<Inputarea ref="newInput" content="" max="150" />\r\n```\r\nThen you could get the new input by use this.refs.newInput.state.content inside functions:\r\n```\r\nsubmitInput(){\r\n    console.log(this.refs.newInput.state.content);//this is users new input\r\n}\r\n...\r\n<button onClick={this.submitInput.bind(this)} />\r\n```\r\n\r\n\r\n##<a name="vote">Vote</a>\r\nDisplay or Receive vote from users<br/>\r\n![Vote](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/vote.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#vote)<br/>\r\n```\r\nimport {Vote} from \'thousanday-react\';\r\n```\r\n```\r\n<Vote left = "Agree" right = "Disagree" agree = "100" disagree = "60" />\r\n<Vote left = "Good" right = "Bad" interact = "true" choice = {this.state.choice} newChoice = {this.newChoice.bind(this)} />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>Left</td>\r\n\t\t<td>Mandatory. Words stand for your yes answer, show on left side.</td>\r\n\t\t<td>"Agree"</td>\r\n\t\t<td>"Good"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>Right</td>\r\n\t\t<td>Mandatory. Words stand for your no answer, show on right side.</td>\r\n\t\t<td>"Disagree"</td>\r\n\t\t<td>"Bad"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>agree</td>\r\n\t\t<td>Optinal. Define the number show on left for vote display</td>\r\n\t\t<td>0</td>\r\n\t\t<td>"100"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>disagree</td>\r\n\t\t<td>Optional. Define the number show on the right for vote display</td>\r\n\t\t<td>0</td>\r\n\t\t<td>"60"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>Interact</td>\r\n\t\t<td>Mandatory for collecting vote. No use for display vote</td>\r\n\t\t<td>"true"</td>\r\n\t\t<td>"false"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>Choice</td>\r\n\t\t<td>Mandatory for collecting vote. Initial user\'s choice. "0" for no, 1 for yes, 2 for no choice before. "0" must be string</td>\r\n\t\t<td>"1"</td>\r\n\t\t<td>"2"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>newChoice</td>\r\n\t\t<td>Optinal. Bind with a function to show new choice from users</td>\r\n\t\t<td></td>\r\n\t\t<td>{this.newChoice.bind(this)}</td>\r\n\t</tr>\r\n</table>\r\n###<b>Show new vote</b>\r\nIf you just want to display a vote, just define left, right, agree, disagree\r\n```\r\n<Vote left = "Agree" right = "Disagree" agree = "100" disagree = "60" />\r\n```\r\n###<b>Receive vote from users</b>\r\nYou should define interact, choice, newChoice for receive vote\r\n```\r\nthis.state = {choice: "2"};\r\n...\r\n<Vote left = "Good" right = "Bad" interact = "true" choice = {this.state.choice} newChoice = {this.newChoice.bind(this)} />\r\n```\r\nThen you can get user\'s choice by a newChoice function\r\n```\r\nnewChoice(newNum) {\r\n    this.setState({userVote: newNum});\r\n}\r\n//this.state.choice would be 0 if user choose no, 1 for yes, 2 for no choice\r\n```\r\n\r\n\r\n##<a name="addtolist">AddtoList</a>\r\nShow a list of options for users to select(multi).<br/>\r\n![AddtoList](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/addtolist.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#addtolist)<br/>\r\n```\r\nimport {AddtoList} from \'thousanday-react\';\r\n```\r\n```\r\nlet options = ["list 1", "list 2", "list 3"];\r\nlet choice = [0, 1, 0];\r\n...\r\n<AddtoList content={options} choice={choice} />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>content</td>\r\n\t\t<td>Mandatory. Provie a list of options.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>["option 1", "option 2", "option 3"]</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>title</td>\r\n\t\t<td>Optional. Provie a title for all the options.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"Please choose some options:</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>choice</td>\r\n\t\t<td>Optional. Use a list to stand for inital choice status. 0,null for not selected. 1 for selected</td>\r\n\t\t<td>all not selected</td>\r\n\t\t<td>[0,1,1,0]</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>width</td>\r\n\t\t<td>Optional. Define the width of the component.</td>\r\n\t\t<td>"100%"</td>\r\n\t\t<td>"200px"</td>\r\n\t</tr>\r\n</table>\r\n### Receive users choices\r\nIf users have selected several options, you could know the result by refs inside function\r\n```\r\nsubmitPlan() {\r\n  console.log(this.refs.planChoice.state.choice);\r\n}\r\n<AddtoList ref="planChoice" title="Add to your plans:" content={this.state.plan} />\r\n<button onClick={this.submitPlan.bind(this)}>submit</button>\r\n```\r\nYou will get an array like [0,1,1,0] or similar to [null,null,1,0], null and 0 means options in the same order has not been selected. 1 means options in the same order has been selected.\r\n\r\n\r\n##<a name="like">Like</a>\r\nShow and receive likes from users.<br/>\r\n![Like](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/like.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#like)<br/>\r\n```\r\nimport {Like} from \'thousanday-react\';\r\n```\r\n```\r\nupdateLike(change) {\r\n  let like = this.state.like;\r\n  this.setState({like: like + change});\r\n}\r\n...\r\n<Like agree={this.state.like} newTotal={this.updateLike.bind(this)}/>\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>agree</td>\r\n\t\t<td>Mandatory. Initial total likes.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"0"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>newTotal</td>\r\n\t\t<td>Mandatory. Update new total after users clicked the like button</td>\r\n\t\t<td></td>\r\n\t\t<td>{this.updateLike.bind(this)}</td>\r\n\t</tr>\r\n</table>\r\n\r\n\r\n##<a name="progress">Progress</a>\r\nShow a bar to display users\' progress.<br/>\r\n![Progress](https://raw.githubusercontent.com/byn9826/ReactUI-Thousanday/master/~markdown/progress.JPG)<br/>\r\n[Example](http://www.thousanday.com/react#progress)<br/>\r\n```\r\nimport {Progress} from \'thousanday-react\';\r\n```\r\n```\r\n<Progress progress={this.state.progress} max="100" />\r\n<Progress progress={this.state.progress} max="100" percentage="false" />\r\n```\r\n<table>\r\n\t<tr>\r\n\t\t<td>Params</td>\r\n\t\t<td>Usage</td>\r\n\t\t<td>Default</td>\r\n\t\t<td>Example</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>progress</td>\r\n\t\t<td>Mandatory. Provie a number to stand for the default progress.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"20"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>max</td>\r\n\t\t<td>Mandatory. Provide a number to stand for the maximum progress.</td>\r\n\t\t<td>null</td>\r\n\t\t<td>"100"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>percentage</td>\r\n\t\t<td>Optional. Show the progress as percentage format or not.</td>\r\n\t\t<td>true</td>\r\n\t\t<td>"false"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>height</td>\r\n\t\t<td>Optional. Define the height of this component.</td>\r\n\t\t<td>"18px"</td>\r\n\t\t<td>"false"</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>width</td>\r\n\t\t<td>Optional. Define the width of the component.</td>\r\n\t\t<td>"100%"</td>\r\n\t\t<td>"200px"</td>\r\n\t</tr>\r\n</table>\r\n\r\n\r\n##License\r\nMIT\r\n',
25 silly publish   readmeFilename: 'README.md',
25 silly publish   gitHead: '129f6e6e5d46bf671b331d23003cbca20fee5bf6',
25 silly publish   _id: 'thousanday-react@0.7.0',
25 silly publish   _shasum: '88dd7fcd3d3f34fde37239a785b41c23228e2a8f',
25 silly publish   _from: '.' }
26 verbose getPublishConfig undefined
27 silly mapToRegistry name thousanday-react
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'thousanday-react',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'thousanday-react',
30 silly mapToRegistry   name: 'thousanday-react',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/thousanday-react
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading C:\Users\BAO\AppData\Roaming\npm-cache\thousanday-react\0.7.0\package.tgz
34 verbose request uri https://registry.npmjs.org/thousanday-react
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 13:08:17
37 verbose request using bearer token for auth
38 verbose request id 0d48756b0b9e7453
39 http request PUT https://registry.npmjs.org/thousanday-react
40 http 403 https://registry.npmjs.org/thousanday-react
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '95',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Sun, 12 Feb 2017 18:08:11 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-yyz8329-YYZ',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1486922890.584500,VS0,VE607',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating C:\Users\BAO\AppData\Roaming\npm-cache\registry.npmjs.org\thousanday-react on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 0.7.0." : thousanday-react
44 verbose stack     at makeError (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
44 verbose stack     at Request._callback (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:210:14)
44 verbose stack     at Request.self.callback (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:187:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:191:7)
44 verbose stack     at Request.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1048:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:188:7)
44 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:969:12)
45 verbose statusCode 403
46 verbose pkgid thousanday-react
47 verbose cwd C:\Users\BAO\www\Thousanday-React
48 error Windows_NT 10.0.14393
49 error argv "C:\\Program Files (x86)\\nodejs\\node.exe" "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
50 error node v6.9.4
51 error npm  v3.10.10
52 error code E403
53 error "You cannot publish over the previously published version 0.7.0." : thousanday-react
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
